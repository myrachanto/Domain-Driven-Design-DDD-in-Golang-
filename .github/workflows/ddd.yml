name: Go

on:
  push:
    branches: [ feature ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        env:
          # MONGO_INITDB_ROOT_USERNAME: test
          # MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: domain
        options:
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017        
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
    # - name: BUild Docker Image
    #   run: docker build . --tag my-image-name:$(date +%s)

    # - name: Publish to Docker Hub
    #   uses: elgohr/Publish-Docker-Github-Action@master
    #   with:
    #     ## the name of our image
    #     name: forbsey/go-api
    #     ## Here we pass in our Docker Username
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     ## and our Docker password which 
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #   # env:
      #   DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
      #   DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      # run:
      #   docker
    # - name pu
  tag:
    name: Tag
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUBTOKEN }}
          tag_prefix: ""
  docker:
    name: Build Docker Image
    needs: [tag]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/golang-ddd:${{needs.tag.outputs.new_tag}}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/master' && needs.build.result == 'success'
  #   # if: startsWith(github.ref, 'refs/tags')
  #   steps:
  #     - name: Extact Version
  #       id: version_step
  #       run: |
  #         echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
  #         echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
  #         echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"

  #     - name: Print Version
  #       run: |
  #         echo ${{steps.version_step.outputs.version_tag}}
  #         echo ${{steps.version_step.outputs.latest_tag}}

  #     - name: set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buidx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{secrets.DOCKER_USERNAME}}
  #         DOCKER_PASSWORD: ${{secrets.DOCKER_ACCESS_TOKEN}}

  #     - name: PrepareReg Names
  #       id: read-docker-image-identifiers
  #       run: |
  #         echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
  #         echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

  #     - name: build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: |
  #           ${{env.VERSION_TAG}}
  #           ${{env.LASTEST_TAG}}
  #         build-args: |
  #           ${{steps.version_step.outputs.version}}

